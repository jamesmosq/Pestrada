El bucle for se utiliza para repetir un bloque de código
un número específico de veces. La sintaxis básica de un
bucle for en PHP es la siguiente:

for (inicialización; condición; incremento) {
    // Código a ejecutar en cada iteración
}

Componentes del bucle for
Inicialización: Es donde se inicializa el contador del bucle y se ejecuta solo una vez al comienzo del bucle.

Condición: Es la condición que se evalúa antes de cada iteración. Si la condición es verdadera, el bucle continúa;
si es falsa, el bucle se detiene.

Incremento: Es la parte del bucle que se ejecuta después de cada iteración del bloque de código.
Generalmente se usa para incrementar o decrementar el contador del bucle.

Ejemplo
Imprimir números del 1 al 10

<?php
for ($i = 1; $i <= 10; $i++) {
    echo $i . "<br>";
}
?>

En este ejemplo:

Inicialización: $i = 1
Condición: $i <= 10
Incremento: $i++ (equivalente a $i = $i + 1)

Imprimir solo números pares del 0 al 10

<?php
for ($i = 0; $i <= 10; $i += 2) {
    echo $i . "<br>";
}
?>


En este ejemplo:

Inicialización: $i = 0
Condición: $i <= 10
Incremento: $i += 2 (equivalente a $i = $i + 2)

Imprimir una lista de elementos de un array

<?php
$frutas = array("Manzana", "Banana", "Naranja", "Uva");

for ($i = 0; $i < count($frutas); $i++) {
    echo $frutas[$i] . "<br>";
}
?>


En este ejemplo:

Inicialización: $i = 0
Condición: $i < count($frutas) (el bucle continuará mientras $i sea menor que la longitud del array)
Incremento: $i++
Explicación detallada
Inicialización

Se ejecuta una sola vez al inicio del bucle.
Puedes declarar y asignar el valor inicial del contador del bucle.
Condición

Se evalúa antes de cada iteración del bucle.
Si la condición es verdadera, el bloque de código dentro del bucle se ejecuta.
Si la condición es falsa, el bucle termina.
Incremento

Se ejecuta después de cada iteración del bloque de código dentro del bucle.
Generalmente se utiliza para actualizar el contador del bucle.
El bucle for es útil cuando se sabe de antemano cuántas veces se necesita iterar. Es muy común en situaciones donde necesitas recorrer arrays o ejecutar una secuencia de operaciones un número específico de veces.

